name: CI for class

on:
  push:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v2

      - name: Check images exist
        run: ./tools/bin/check_images_exist.sh

      - uses: actions/setup-java@v1
        with:
          java-version: '14'

      - uses: actions/setup-node@v1
        with:
          node-version: '14.7'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Generate Template scaffold
        run: ./gradlew :airbyte-integrations:connector-templates:generator:testScaffoldTemplates --scan

      - name: Format
        run: ./gradlew --no-daemon format --scan

      - name: Ensure no file change
        run: git status --porcelain && test -z "$(git status --porcelain)"

      - name: Build
        run: CORE_ONLY=true ./gradlew --no-daemon build --scan

      - name: Ensure no file change
        run: git status --porcelain && test -z "$(git status --porcelain)"

      - name: Check documentation
        if: success() && github.ref == 'refs/heads/master'
        run: ./tools/site/link_checker.sh check_docs

      - name: Get Docker Space
        run: docker run --rm busybox df -h

      - name: Build Core Docker Images
        if: success() && github.ref == 'refs/heads/master'
        run: ./gradlew --no-daemon composeBuild --scan
        env:
          GIT_REVISION: ${{ github.sha }}

      - name: Image Cleanup
        run: ./tools/bin/clean_images.sh

      # make sure these always run before pushing core docker images
      - name: Run End-to-End Acceptance Tests
        if: success() && github.ref == 'refs/heads/master'
        run: ./tools/bin/acceptance_test.sh
        
  test_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '14'

      - uses: actions/setup-node@v1
        with:
          node-version: '14.7'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Build Core Docker Images and Run Tests
        run: CORE_ONLY=true ./gradlew --no-daemon format composeBuild test -x :airbyte-webapp:test --scan
        env:
          GIT_REVISION: ${{ github.sha }}
          CORE_ONLY: true

      - name: Ensure no file change
        run: git status --porcelain && test -z "$(git status --porcelain)"

      - name: Run Docker End-to-End Acceptance Tests
        run: |
          ./tools/bin/acceptance_test.sh
